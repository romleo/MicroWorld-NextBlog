{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/FoldScope/MicroWorld-NextBlog/components/Link.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport { useRouter } from 'next/router';\nimport clsx from 'clsx';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link';\nimport PropTypes from 'prop-types';\nconst NextComposed = forwardRef(function NextComposed(props, ref) {\n  const {\n    href,\n    as,\n    prefetch\n  } = props,\n        other = _objectWithoutProperties(props, [\"href\", \"as\", \"prefetch\"]);\n\n  return __jsx(NextLink, {\n    href: href,\n    as: as,\n    prefetch: prefetch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"a\", _extends({\n    ref: ref\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })));\n});\nNextComposed.propTypes = {\n  as: PropTypes.string,\n  prefetch: PropTypes.func,\n  props: PropTypes.object,\n  href: PropTypes.string\n};\n\nconst Link = (_ref) => {\n  let {\n    href,\n    className: classNameProps,\n    activeClassName = 'active'\n  } = _ref,\n      other = _objectWithoutProperties(_ref, [\"href\", \"className\", \"activeClassName\"]);\n\n  const router = useRouter();\n  const pathname = typeof href === 'string' ? href : href.pathname;\n  const className = clsx(classNameProps, {\n    [activeClassName]: router.pathname === pathname && activeClassName\n  });\n  return __jsx(MuiLink, _extends({\n    component: NextComposed,\n    className: className,\n    href: href\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n};\n\nLink.propTypes = {\n  activeClassName: PropTypes.string,\n  className: PropTypes.string,\n  href: PropTypes.string\n};\nexport default Link;","map":{"version":3,"sources":["/Users/admin/Documents/FoldScope/MicroWorld-NextBlog/components/Link.jsx"],"names":["React","forwardRef","useRouter","clsx","NextLink","MuiLink","PropTypes","NextComposed","props","ref","href","as","prefetch","other","propTypes","string","func","object","Link","className","classNameProps","activeClassName","router","pathname"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,YAAY,GAAGN,UAAU,CAAC,SAASM,YAAT,CAAsBC,KAAtB,EAA6BC,GAA7B,EAAiC;AAC/D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,EAAR;AAAYC,IAAAA;AAAZ,MAAmCJ,KAAzC;AAAA,QAA+BK,KAA/B,4BAAyCL,KAAzC;;AACA,SACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEE,IAAhB;AAAsB,IAAA,EAAE,EAAEC,EAA1B;AAA8B,IAAA,QAAQ,EAAEC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,GAAG,EAAEH;AAAR,KAAiBI,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD,CAP8B,CAA/B;AASAN,YAAY,CAACO,SAAb,GAAuB;AACrBH,EAAAA,EAAE,EAAEL,SAAS,CAACS,MADO;AAErBH,EAAAA,QAAQ,EAAEN,SAAS,CAACU,IAFC;AAGrBR,EAAAA,KAAK,EAAEF,SAAS,CAACW,MAHI;AAIrBP,EAAAA,IAAI,EAAEJ,SAAS,CAACS;AAJK,CAAvB;;AAOA,MAAMG,IAAI,GAAG,UAKP;AAAA,MALQ;AACZR,IAAAA,IADY;AAEZS,IAAAA,SAAS,EAAEC,cAFC;AAGZC,IAAAA,eAAe,GAAG;AAHN,GAKR;AAAA,MADDR,KACC;;AACJ,QAAMS,MAAM,GAAGpB,SAAS,EAAxB;AACA,QAAMqB,QAAQ,GAAG,OAAOb,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACa,QAAxD;AACA,QAAMJ,SAAS,GAAGhB,IAAI,CAACiB,cAAD,EAAiB;AACrC,KAACC,eAAD,GAAmBC,MAAM,CAACC,QAAP,KAAoBA,QAApB,IAAgCF;AADd,GAAjB,CAAtB;AAIA,SACE,MAAC,OAAD;AACE,IAAA,SAAS,EAAEd,YADb;AAEE,IAAA,SAAS,EAAEY,SAFb;AAGE,IAAA,IAAI,EAAET;AAHR,KAIMG,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CApBD;;AAsBAK,IAAI,CAACJ,SAAL,GAAe;AACbO,EAAAA,eAAe,EAAEf,SAAS,CAACS,MADd;AAEbI,EAAAA,SAAS,EAAEb,SAAS,CAACS,MAFR;AAGbL,EAAAA,IAAI,EAAEJ,SAAS,CAACS;AAHH,CAAf;AAMA,eAAeG,IAAf","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useRouter } from 'next/router';\nimport clsx from 'clsx';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link';\nimport PropTypes from 'prop-types';\n\nconst NextComposed = forwardRef(function NextComposed(props, ref){\n  const { href, as, prefetch, ...other } = props;\n  return (\n    <NextLink href={href} as={as} prefetch={prefetch}>\n      <a ref={ref} {...other} />\n    </NextLink>\n  );\n});\n\nNextComposed.propTypes={\n  as: PropTypes.string,\n  prefetch: PropTypes.func,\n  props: PropTypes.object,\n  href: PropTypes.string,\n}\n\nconst Link = ({\n  href,\n  className: classNameProps,\n  activeClassName = 'active',\n  ...other\n}) => {\n  const router = useRouter();\n  const pathname = typeof href === 'string' ? href : href.pathname;\n  const className = clsx(classNameProps, {\n    [activeClassName]: router.pathname === pathname && activeClassName\n  });\n\n  return (\n    <MuiLink\n      component={NextComposed}\n      className={className}\n      href={href}\n      {...other}\n    />\n  );\n};\n\nLink.propTypes={\n  activeClassName: PropTypes.string,\n  className: PropTypes.string,\n  href: PropTypes.string,\n}\n\nexport default Link;"]},"metadata":{},"sourceType":"module"}